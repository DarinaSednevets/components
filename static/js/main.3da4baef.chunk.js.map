{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/FriendList/FriendList.jsx","components/Statistics/Statistics.jsx","components/Profile/Profile.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","FriendList","friends","list","map","avatar","name","isOnline","id","item","status","style","backgroundColor","src","alt","width","getRandomColor","r","Math","floor","random","Statistics","title","stats","statistics","statList","label","percentage","defaultProps","Profile","tag","location","profile","description","wrapper","li","quantity","followers","views","likes","TransactionHistory","transactions","transactionHistory","string","type","amount","currency","charAt","toUpperCase","slice","App","user","statisticalData","Object","values","reduce","acc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3da4baef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__pJk_M\",\"name\":\"Profile_name__2vnIA\",\"avatar\":\"Profile_avatar__1SmDi\",\"description\":\"Profile_description__1brs7\",\"tag\":\"Profile_tag__uHFcE\",\"location\":\"Profile_location__35dX1\",\"stats\":\"Profile_stats__1RJyI\",\"li\":\"Profile_li__1JS1K\",\"label\":\"Profile_label__2-Epg\",\"quantity\":\"Profile_quantity__rYsHz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__FCtin\",\"title\":\"Statistics_title__VRF2V\",\"statList\":\"Statistics_statList__Kuoi9\",\"item\":\"Statistics_item__2Bzn1\",\"label\":\"Statistics_label__lSHD5\",\"percentage\":\"Statistics_percentage__1fWkr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__3HASN\",\"list2\":\"FriendList_list2__3eHYO\",\"item\":\"FriendList_item__23_cW\",\"status\":\"FriendList_status__21gF4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__H8v0M\"};","import styles from './Container.module.css'\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={styles.container}>{children}</div>\r\n)\r\n\r\n\r\nexport default Container;","\r\nimport PropTypes from 'prop-types'\r\nimport styles from './FriendList.module.css'\r\n\r\n\r\nconst FriendList = ({ friends }) => (\r\n    <ul className={`${styles.list} ${styles.list}`}>\r\n        { friends.map(({ avatar, name, isOnline, id }) =>\r\n            <li key={id} className={styles.item}>\r\n                <span className={styles.status} style={{ backgroundColor: isOnline ? \"green\" : \"red\" }}></span>\r\n                <img src={avatar} alt=\"avatar\" width=\"48\" />\r\n                <p>{name}</p>\r\n            </li>\r\n        )}\r\n    </ul>\r\n)\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            avatar: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.string.isRequired,\r\n            id: PropTypes.string.isRequired\r\n        })\r\n    ).isRequired,\r\n}\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types'\r\nimport styles from './Statistics.module.css'\r\n\r\nfunction getRandomColor() {\r\n    const r = function () {\r\n        return Math.floor(Math.random() * 256);\r\n    };\r\n    return 'rgb(' + r() + ',' + r() + ',' + r() + ')';\r\n}\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n\r\n    <section className={styles.statistics}>\r\n        {title ? <h2 className={styles.title}>{title}</h2> : null}\r\n\r\n        <ul className={styles.statList}>\r\n            {stats.map(({ label, percentage }) =>\r\n            (<li key={label} className={styles.item} style={{ backgroundColor: getRandomColor() }}>\r\n                <span className={styles.label}>{label}</span>\r\n                <span className={styles.percentage}>{percentage}%</span>\r\n            </li>))}\r\n        </ul>\r\n    </section>\r\n)\r\nStatistics.defaultProps = {\r\n    title: ''\r\n}\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n\r\n        })\r\n    ).isRequired,\r\n}\r\n\r\nexport default Statistics;","\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Profile.module.css'\r\n\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n    <div className={styles.profile}>\r\n        <div className={styles.description}>\r\n            <img\r\n                src={avatar}\r\n                alt=\"Аватар пользователя\"\r\n                className={styles.avatar}\r\n            />\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.tag}>@{tag}</p>\r\n            <p className={styles.location}>{location}</p>\r\n        </div>\r\n        <div className={styles.wrapper}>\r\n            <ul className={styles.stats}>\r\n                <li className={styles.li}>\r\n                    <span className={styles.label}>Followers</span>\r\n                    <span className={styles.quantity}>{stats.followers}</span>\r\n                </li>\r\n                <li className={styles.li}>\r\n                    <span className={styles.label}>Views</span>\r\n                    <span className={styles.quantity}>{stats.views}</span>\r\n                </li>\r\n                <li className={styles.li}>\r\n                    <span className={styles.label}>Likes</span>\r\n                    <span className={styles.quantity}>{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Profile","import PropTypes from 'prop-types'\r\nimport styles from './TransactionHistory.module.css'\r\nfunction capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nconst TransactionHistory = ({ transactions }) => (\r\n    <table className={styles.transactionHistory}>\r\n        <thead>\r\n            <tr>\r\n                <th>TYPE</th>\r\n                <th>AMOUNT</th>\r\n                <th>CURRENCY</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            {transactions.map(({ id, type, amount, currency }) => (\r\n\r\n                <tr key={id}>\r\n                    <td>{capitalizeFirstLetter(type)}</td>\r\n                    <td>{amount}</td>\r\n                    <td>{currency}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n)\r\n\r\nTransactionHistory.propTypes = {\r\n    transactions: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n\r\n        })\r\n    ).isRequired,\r\n}\r\n\r\nexport default TransactionHistory;","import Container from './components/Container/Container'\n\nimport FriendList from './components/FriendList/FriendList'\nimport friends from './components/FriendList/friends.json'\n\nimport Statistics from \"./components/Statistics/Statistics\";\nimport statisticalData from \"./components/Statistics/statistical-data.json\";\n\nimport Profile from './components/Profile/Profile'\nimport user from './components/Profile/user.json'\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\nimport transactions from './components/TransactionHistory/transactions.json'\n\nimport './styles.css';\n\nfunction statSum(statisticalData) {\n  statisticalData = Object.values(\n    statisticalData.reduce((acc, item) => {\n      (\n        acc[item.label] ||\n        (acc[item.label] = { label: item.label, percentage: 0 })\n      ).percentage += item.percentage;\n      return acc;\n    }, {})\n  );\n  return statisticalData;\n}\nconst App = () => {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats} />\n      <Statistics title=\"Upload stats\" stats={statSum(statisticalData)} />\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}